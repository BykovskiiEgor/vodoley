name: CI/CD Deploy to Production


on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main 

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-backend:
    name: Build Django Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.7

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run tests
        env:
            DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
            DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
            CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
        run: |
          cd backend
          pytest  

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push backend Docker image
        run: |
          cd backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/django-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/django-backend:latest

      - name: Build and push frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vue-frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/vue-frontend:latest

      - name: Build and push nginx image
        run: |
          cd nginx
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Deploy
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /home/YOUR_USER/your_project
            docker-compose pull
            docker-compose down
            docker-compose up -d
